import { DocumentNode, GraphQLSchema, IntrospectionQuery } from 'graphql';
import { SchemaLoader } from './schema-loader';
import { CLIOptions } from '../../cli-options';
export declare class SchemaFromExport implements SchemaLoader {
    canHandle(pointerToSchema: string): boolean;
    handle(file: string, cliOptions: CLIOptions): Promise<GraphQLSchema>;
    isSchemaText(obj: any): obj is string;
    isSchemaJson(obj: any): obj is {
        data: IntrospectionQuery;
    };
    isSchemaObject(obj: any): obj is GraphQLSchema;
    isSchemaAst(obj: string | DocumentNode): obj is DocumentNode;
    isPromise(obj: any): boolean;
    resolveSchema(schema: any): Promise<any>;
}
